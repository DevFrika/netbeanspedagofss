<?php

namespace Proxies\__CG__\Pedagogie\PedagogieBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Transaction extends \Pedagogie\PedagogieBundle\Entity\Transaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'id', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'typetransaction', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'descrtiption', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'nomuser', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'date_transaction', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'utilisateur');
        }

        return array('__isInitialized__', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'id', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'typetransaction', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'descrtiption', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'nomuser', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'date_transaction', '' . "\0" . 'Pedagogie\\PedagogieBundle\\Entity\\Transaction' . "\0" . 'utilisateur');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Transaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', array($etat));

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', array());

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisateur(\Pedagogie\PedagogieBundle\Entity\Utilisateur $utilisateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisateur', array($utilisateur));

        return parent::setUtilisateur($utilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisateur', array());

        return parent::getUtilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypetransaction($typetransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypetransaction', array($typetransaction));

        return parent::setTypetransaction($typetransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypetransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypetransaction', array());

        return parent::getTypetransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescrtiption($descrtiption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescrtiption', array($descrtiption));

        return parent::setDescrtiption($descrtiption);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescrtiption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescrtiption', array());

        return parent::getDescrtiption();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateMaj($dateMaj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateMaj', array($dateMaj));

        return parent::setDateMaj($dateMaj);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateMaj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateMaj', array());

        return parent::getDateMaj();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomuser($nomuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomuser', array($nomuser));

        return parent::setNomuser($nomuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomuser', array());

        return parent::getNomuser();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateTransaction', array());

        return parent::setDateTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateTransaction', array());

        return parent::getDateTransaction();
    }

}
